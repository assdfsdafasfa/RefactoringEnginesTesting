private static class IdSetInlined {

    private final MyTIntHashSetInlined mySet;

    private IdSetInlined(final int initialCapacity) {
        mySet = new MyTIntHashSetInlined(initialCapacity, 0.98f);
    }

    public void ensureCapacity(int desiredCapacity) {
        mySet.ensureCapacity(desiredCapacity);
    }

    public boolean add(int val) {
        return mySet.add(val);
    }

    private static class MyTIntHashSetInlined extends TIntHashSet {
        public MyTIntHashSetInlined(int initialCapacity, float loadFactor) {
            super(initialCapacity, loadFactor);
        }

        @Override
        public void compact() {
            if (((int)(capacity() * _loadFactor)/ Math.max(1, size())) >= 3) {
                super.compact();
            }
        }
    }
}
