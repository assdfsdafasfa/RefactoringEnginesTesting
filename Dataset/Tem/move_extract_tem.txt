You are an expert in software testing and refactoring, please modify the following historical refactoring case based on the given example to generate test cases for other refactoring types：
[Example of source code:[class A{	private void m() {}} class B {B b; public void m(){}}   
after refactoring:[]
refactoring type: Move method; refactoring operation: move "m()" to class A
Move transformation migrated to Rename Refactoring：class A{private void m() {} public void tempName(){}} class B {B b; }   
Move transformation migrated to Extract Refactoring：class A{	private void m( System.out.println("");) {}} class B {B b; public void m(){}}  
Move transformation migrated to Extract Refactoring：class A{	private void m(B.m();) {}} class B {B b; public void m(){}}  
Please perform similar migrations on the following programs as described above, and fill in the concrete Inline Refactoring code example after migration,change field:[source code:    
package a;
public class A {}

package b;
public class B extends A {
  public void m() {} // pull me up and make abstract

  void n() {
    new A();
  }
}
][refactoring type: Move field; refactoring operation: move "" to ""]
Please only generate the migration results code below:
[The result of migration to Rename Refactoring：{}]
[The result of migration to Extract Refactoring：{}]
[The result of migration to Inline Refactoring：{}]
