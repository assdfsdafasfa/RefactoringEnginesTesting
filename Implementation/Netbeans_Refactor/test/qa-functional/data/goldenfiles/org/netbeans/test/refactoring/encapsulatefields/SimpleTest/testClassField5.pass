Encapsulate field protected rootField of class org.netbeans.tests.examples.packc.AbstractBean
field changed to private, setter: public setRootField(...), getter: public getRootField(), use accessors if necessary
Found 7 occurance(s).

org/netbeans/tests/examples/packa/Association.java

      <b>rootField</b>=name+(new Date().toString());
      System.out.println(<b>rootField</b>);

File diff:

-pass[29]             rootField=name+(new Date().toString());
+test[29]             setRootField(name+(new Date().toString()));
-pass[30]             System.out.println(rootField);
+test[30]             System.out.println(getRootField());
Original file:
-------------------------------------
/*
 * Association.java
 *
 * Created on May 20, 2004, 1:49 PM
 */

package org.netbeans.tests.examples.packa;

import java.util.Date;
import org.netbeans.tests.examples.packc.AbstractBean;

/**
 *
 * @author  eh103527
 */
public class Association extends AbstractBean {
    
    protected Bean other;
    
    protected String name;
    
    /** Creates a new instance of Association */
    public Association(String name, Bean other) {
        this.name=name;
        this.other=other;
    }
    
    public void methodBean() {
        rootField=name+(new Date().toString());
        System.out.println(rootField);
    }
    
}
Modified file:
-------------------------------------
/*
 * Association.java
 *
 * Created on May 20, 2004, 1:49 PM
 */

package org.netbeans.tests.examples.packa;

import java.util.Date;
import org.netbeans.tests.examples.packc.AbstractBean;

/**
 *
 * @author  eh103527
 */
public class Association extends AbstractBean {
    
    protected Bean other;
    
    protected String name;
    
    /** Creates a new instance of Association */
    public Association(String name, Bean other) {
        this.name=name;
        this.other=other;
    }
    
    public void methodBean() {
        setRootField(name+(new Date().toString()));
        System.out.println(getRootField());
    }
    
}

org/netbeans/tests/examples/packa/Property.java

      <b>rootField</b>=name+" "+value+" "+(new Date().toString());
      System.out.println(<b>rootField</b>);

File diff:

-pass[58]             rootField=name+" "+value+" "+(new Date().toString());
+test[58]             setRootField(name+" "+value+" "+(new Date().toString()));
-pass[59]             System.out.println(rootField);        
+test[59]             System.out.println(getRootField());        
Original file:
-------------------------------------
/*
 * Property.java
 *
 * Created on May 20, 2004, 1:48 PM
 */

package org.netbeans.tests.examples.packa;

import java.util.Date;
import org.netbeans.tests.examples.packc.AbstractBean;

/**
 *
 * @author  eh103527
 */
public class Property extends AbstractBean {
    
    static String[] types={"String","int","boolean","char","long","short","float","double"};
    
    String name;
    
    String value;
    
    /** Creates a new instance of Property */
    public Property(String name, String value) {
        this.name=name;
        this.value=value;
    }
    
    /**
     * Getter for property name.
     * @return Value of property name.
     */
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Getter for property value.
     * @return Value of property value.
     */
    public java.lang.String getValue() {
        return value;
    }
    
    /**
     * Setter for property value.
     * @param value New value of property value.
     */
    public void setValue(java.lang.String value) {
        this.value = value;
        if (Bean.class == value.getClass()) {
            System.out.println("good");
        }
    }
    
    public void methodBean() {
        rootField=name+" "+value+" "+(new Date().toString());
        System.out.println(rootField);        
    }
    
}
Modified file:
-------------------------------------
/*
 * Property.java
 *
 * Created on May 20, 2004, 1:48 PM
 */

package org.netbeans.tests.examples.packa;

import java.util.Date;
import org.netbeans.tests.examples.packc.AbstractBean;

/**
 *
 * @author  eh103527
 */
public class Property extends AbstractBean {
    
    static String[] types={"String","int","boolean","char","long","short","float","double"};
    
    String name;
    
    String value;
    
    /** Creates a new instance of Property */
    public Property(String name, String value) {
        this.name=name;
        this.value=value;
    }
    
    /**
     * Getter for property name.
     * @return Value of property name.
     */
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Getter for property value.
     * @return Value of property value.
     */
    public java.lang.String getValue() {
        return value;
    }
    
    /**
     * Setter for property value.
     * @param value New value of property value.
     */
    public void setValue(java.lang.String value) {
        this.value = value;
        if (Bean.class == value.getClass()) {
            System.out.println("good");
        }
    }
    
    public void methodBean() {
        setRootField(name+" "+value+" "+(new Date().toString()));
        System.out.println(getRootField());        
    }
    
}

org/netbeans/tests/examples/packc/AbstractBean.java

      Change modifier of field <b>rootField</b> to <b>private</b>
      Create method getRootField
      Create method setRootField

File diff:

-pass[15]         protected String rootField;
+test[15]         private String rootField;
+test[22]     
+test[23]         public String getRootField() {
+test[24]             return rootField;
+test[25]         }
+test[26]     
+test[27]         public void setRootField(String rootField) {
+test[28]             this.rootField = rootField;
+test[29]         }
Original file:
-------------------------------------
/*
 * AbstractBean.java
 *
 * Created on July 20, 2004, 3:25 PM
 */

package org.netbeans.tests.examples.packc;

/**
 *
 * @author  eh103527
 */
public abstract class AbstractBean {
    
    protected String rootField;
    
    /** Creates a new instance of AbstractBean */
    public AbstractBean() {
    }
    
    public abstract void methodBean();
    
}
Modified file:
-------------------------------------
/*
 * AbstractBean.java
 *
 * Created on July 20, 2004, 3:25 PM
 */

package org.netbeans.tests.examples.packc;

/**
 *
 * @author  eh103527
 */
public abstract class AbstractBean {
    
    private String rootField;
    
    /** Creates a new instance of AbstractBean */
    public AbstractBean() {
    }
    
    public abstract void methodBean();

    public String getRootField() {
        return rootField;
    }

    public void setRootField(String rootField) {
        this.rootField = rootField;
    }
    
}

