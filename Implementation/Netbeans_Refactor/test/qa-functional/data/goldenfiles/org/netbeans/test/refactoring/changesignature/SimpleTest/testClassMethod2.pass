Change signature of method public static makeTest() of class org.netbeans.tests.examples.Test
method public makeTest
Arguments: 
boolean publish = false
Found 2 occurance(s).

org/netbeans/tests/examples/Test.java

      Change method parameters of <b>public static void makeTest()</b>

File diff:

-pass[43]         public static void makeTest() {
+test[43]         public static void makeTest(boolean publish) {
Original file:
-------------------------------------
/*
 * Test.java
 *
 * Created on May 27, 2004, 4:25 PM
 */

package org.netbeans.tests.examples;

/**
 *
 * @author  eh103527
 */
public class Test {
    
    static Test running=null;
    
    /**
     * Name of test - String.
     */
    String name;
    
    /** Creates a new instance of Test */
    public Test(String name) {
        this.name=name;
    }
    
    public void runTest() {
        if (running == null) {
            System.out.println("runTest "+name);
            running=this;
            try {
                Thread.sleep(20000);
            } catch (Exception ex) {
            }
            running=null;
        }
    }
    
    public static Test getRunning() {
        return running;
    }
    
    public static void makeTest() {
        Test t=new Test("empty");
        t.runTest();
    }
    
    public void test1() {
        int a=0;
        for (int i=0;i < 10;i++) {
            a+=i;
        }
        System.out.println(a);
    }
}
Modified file:
-------------------------------------
/*
 * Test.java
 *
 * Created on May 27, 2004, 4:25 PM
 */

package org.netbeans.tests.examples;

/**
 *
 * @author  eh103527
 */
public class Test {
    
    static Test running=null;
    
    /**
     * Name of test - String.
     */
    String name;
    
    /** Creates a new instance of Test */
    public Test(String name) {
        this.name=name;
    }
    
    public void runTest() {
        if (running == null) {
            System.out.println("runTest "+name);
            running=this;
            try {
                Thread.sleep(20000);
            } catch (Exception ex) {
            }
            running=null;
        }
    }
    
    public static Test getRunning() {
        return running;
    }
    
    public static void makeTest(boolean publish) {
        Test t=new Test("empty");
        t.runTest();
    }
    
    public void test1() {
        int a=0;
        for (int i=0;i < 10;i++) {
            a+=i;
        }
        System.out.println(a);
    }
}

org/netbeans/tests/examples/packc/BeanE.java

      Test.<b>makeTest()</b>;

File diff:

-pass[25]             Test.makeTest();
+test[25]             Test.makeTest(false);
Original file:
-------------------------------------
/*
 * BeanE.java
 *
 * Created on July 23, 2004, 2:22 PM
 */

package org.netbeans.tests.examples.packc;

import org.netbeans.tests.examples.Test;

/**
 *
 * @author  eh103527
 */
public class BeanE {
    
    /** Creates a new instance of BeanE */
    public BeanE() {
        
    }
    
    public void run() {
        Test t1=new Test("1");
        t1.runTest();
        Test.makeTest();
        t1.test1();
    }
    
    public double count(double[] v1, double[] v2) {
        if (v1.length != v2.length) {
            throw new IllegalArgumentException();
        }
        double len1, len2, pow;
        len1=0.0;
        len2=0.0;
        pow=0.0;
        for (int i=0;i < v1.length;i++) {
            len1+=v1[i]*v1[i];
            len2+=v2[i]*v2[i];
            pow+=v1[i]*v2[i];
        }
        for (int i=0;i < v1.length;i++) {
            v1[i]=v1[i]/len1;
            v2[i]=v2[i]/len2;
        }
        len1=Math.sqrt(len1);
        len2=Math.sqrt(len2);
        return pow/(len1*len2);
    }
}
Modified file:
-------------------------------------
/*
 * BeanE.java
 *
 * Created on July 23, 2004, 2:22 PM
 */

package org.netbeans.tests.examples.packc;

import org.netbeans.tests.examples.Test;

/**
 *
 * @author  eh103527
 */
public class BeanE {
    
    /** Creates a new instance of BeanE */
    public BeanE() {
        
    }
    
    public void run() {
        Test t1=new Test("1");
        t1.runTest();
        Test.makeTest(false);
        t1.test1();
    }
    
    public double count(double[] v1, double[] v2) {
        if (v1.length != v2.length) {
            throw new IllegalArgumentException();
        }
        double len1, len2, pow;
        len1=0.0;
        len2=0.0;
        pow=0.0;
        for (int i=0;i < v1.length;i++) {
            len1+=v1[i]*v1[i];
            len2+=v2[i]*v2[i];
            pow+=v1[i]*v2[i];
        }
        for (int i=0;i < v1.length;i++) {
            v1[i]=v1[i]/len1;
            v2[i]=v2[i]/len2;
        }
        len1=Math.sqrt(len1);
        len2=Math.sqrt(len2);
        return pow/(len1*len2);
    }
}

